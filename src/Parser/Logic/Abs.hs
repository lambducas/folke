-- File generated by the BNF Converter (bnfc 2.9.5).

{-# LANGUAGE GeneralizedNewtypeDeriving #-}

-- | The abstract syntax of language logic.

module Logic.Abs where

import Prelude (Integer, String)
import qualified Prelude as C (Eq, Ord, Show, Read)
import qualified Data.String

data Sequent = Seq [Form] Form [Step]
  deriving (C.Eq, C.Ord, C.Show, C.Read)

data TermType = TermType_var | TermType_const
  deriving (C.Eq, C.Ord, C.Show, C.Read)

data Step
    = StepPrem Form
    | StepDecVar TermType TermId
    | StepDecFun TermId [TermId]
    | StepAssume Form
    | StepProof [Step]
    | StepForm RuleId [Arg] Form
  deriving (C.Eq, C.Ord, C.Show, C.Read)

data Arg = ArgSub Step | ArgLit Integer
  deriving (C.Eq, C.Ord, C.Show, C.Read)

data SymBot = SymBot_bot | SymBot1
  deriving (C.Eq, C.Ord, C.Show, C.Read)

data SymEq = SymEq1
  deriving (C.Eq, C.Ord, C.Show, C.Read)

data SymAll = SymAll_all
  deriving (C.Eq, C.Ord, C.Show, C.Read)

data SymSome = SymSome_some
  deriving (C.Eq, C.Ord, C.Show, C.Read)

data SymNot = SymNot_not | SymNot1
  deriving (C.Eq, C.Ord, C.Show, C.Read)

data SymAnd = SymAnd_and | SymAnd1
  deriving (C.Eq, C.Ord, C.Show, C.Read)

data SymOr = SymOr_or | SymOr1
  deriving (C.Eq, C.Ord, C.Show, C.Read)

data Form
    = FormBot SymBot
    | FormEq Term SymEq Term
    | FormPred Pred
    | FormAll SymAll TermId Form
    | FormSome SymSome TermId Form
    | FormNot SymNot Form
    | FormAnd Form SymAnd Form
    | FormOr Form SymOr Form
    | FormIf Form Form
  deriving (C.Eq, C.Ord, C.Show, C.Read)

data Pred = Pred PredId Params
  deriving (C.Eq, C.Ord, C.Show, C.Read)

data Term = Term TermId Params
  deriving (C.Eq, C.Ord, C.Show, C.Read)

data Params = Params1 [Term] | Params2
  deriving (C.Eq, C.Ord, C.Show, C.Read)

newtype PredId = PredId String
  deriving (C.Eq, C.Ord, C.Show, C.Read, Data.String.IsString)

newtype TermId = TermId String
  deriving (C.Eq, C.Ord, C.Show, C.Read, Data.String.IsString)

newtype RuleId = RuleId String
  deriving (C.Eq, C.Ord, C.Show, C.Read, Data.String.IsString)

